#    -*- mode: org -*-


Archived entries from file /home/sphinx/projects/snaplet-redson/README.org


* DONE CRUD efficiency
  CLOSED: [2012-02-21 Срд 23:11]
  :PROPERTIES:
  :ARCHIVE_TIME: 2012-02-22 Срд 23:12
  :ARCHIVE_FILE: ~/projects/snaplet-redson/README.org
  :ARCHIVE_OLPATH: To do
  :ARCHIVE_CATEGORY: README
  :ARCHIVE_TODO: DONE
  :END:
  Backbone provides means of expecting which model fields really
  changed upon `change` event. Perhaps we can use it to include only
  changed fields in JSON sent to server upon model updates.


* DONE Access control
  CLOSED: [2012-02-26 Вск 13:15]
  :PROPERTIES:
  :ARCHIVE_TIME: 2012-02-26 Вск 13:15
  :ARCHIVE_FILE: ~/projects/snaplet-redson/README.org
  :ARCHIVE_OLPATH: To do
  :ARCHIVE_CATEGORY: README
  :ARCHIVE_TODO: DONE
  :END:
  - [X] Per-field permissions (r/w) for different user groups
    (roles);
  - [X]  c/r/u/d permissions on models for roles.

* DONE Routing bug
  CLOSED: [2012-03-11 Вск 15:31]
  :PROPERTIES:
  :ARCHIVE_TIME: 2012-03-11 Вск 15:31
  :ARCHIVE_FILE: ~/projects/snaplet-redson/README.org
  :ARCHIVE_OLPATH: To do
  :ARCHIVE_CATEGORY: README
  :ARCHIVE_TODO: DONE
  :END:
  Snap fails to properly route requests to `/foo/bar/` if it's
  shadowed by `/foo/bar/:baz/` route even if `:baz` variable capture
  fails: https://github.com/snapframework/snap-core/issues/120

  Currently we have to use a workaround to correctly direct
  `/_/<formname>/` requests to emptyPage handler by checking `id`
  parameter value in read handler.
  

* DONE Allow any meta flags for fields
  CLOSED: [2012-03-22 Чтв 02:41]
  :PROPERTIES:
  :ARCHIVE_TIME: 2012-03-22 Чтв 15:41
  :ARCHIVE_FILE: ~/projects/snaplet-redson/README.org
  :ARCHIVE_OLPATH: To do
  :ARCHIVE_CATEGORY: README
  :ARCHIVE_TODO: DONE
  :END:
  Field options which are not used by the server should be stored in
  separate group and served back to client transparently. This way
  we'll be able to modify models and client without fiddling with
  Metamodel.hs.
